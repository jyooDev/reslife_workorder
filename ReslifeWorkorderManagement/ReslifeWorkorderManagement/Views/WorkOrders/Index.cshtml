@model WorkOrderAssigneeVM

@{
    ViewData["Title"] = "WorkOrders";
    Layout = "_Staff-Layout";
}

<div id="PlaceHolderHere"></div>

<div class="wrapper">
    <div class="d-flex justify-content-between align-items-center heading-line">
        <h1>Work Orders</h1>
        <div class="filter-wrapper">
            <button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterPanel" aria-controls="filterPanel">
                <i class="bi bi-funnel-fill"></i> Filters
            </button>
            <div class="collapse" id="filterPanel">
                <div class="p-3 rounded">
                    <div class="row">
                        <!-- Building Filter -->
                        <div class="col-md-4">
                            <label for="buildingFilter" class="filter-label">Building</label>
                            <select id="buildingFilter" class="form-select filter-select" multiple>
                                <option selected value="All">All</option>
                                <option value="Ross">Ross</option>
                                <option value="Hawkes">Hawkes</option>
                                <option value="Curran">Curran</option>
                                <option value="McNeil">McNeil</option>
                                <option value="Ostrander">Ostrander</option>
                                <option value="Crownhart">Crownhart</option>
                                <option value="YU">YU</option>
                                <option value="Swenson">Swenson</option>
                            </select>
                        </div>

                        <!-- Progress Filter -->
                        <div class="col-md-4">
                            <label for="progressFilter" class="filter-label">Progress</label>
                            <select id="progressFilter" class="form-select filter-select" multiple>
                                <option selected value="All">All</option>
                                <option value="0">Requested</option>
                                <option value="1">In Progress</option>
                                <option value="2">Completed</option>
                            </select>
                        </div>

                        <!-- Area Filter -->
                        <div class="col-md-4">
                            <label for="areaFilter" class="filter-label">Area</label>
                            <select id="areaFilter" class="form-select filter-select" multiple>
                                <option selected value="All">All</option>
                                <option value="Kitchen">Kitchen</option>
                                <option value="Room">Room</option>
                                <option value="FemaleBathroom">Female Bathroom</option>
                                <option value="MaleBathroom">Male Bathroom</option>
                                <option value="GenderNeutralBathroom">Gender Neutral Bathroom</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>

                    <!-- Filter Buttons -->
                    <div class="d-flex justify-content-end mt-3">
                        <button id="applyFilters" onclick="ApplyFilters()" class="btn me-2">Apply Filters</button>
                        <button id="resetFilters" onclick="ResetFilters()" class="btn">Reset</button>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <table id="workOrdersTable">
        <thead id="workOrdersTableHead">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Created At
                </th>
                <th>
                    Request
                </th>
                <th>
                    Building
                </th>
                <th>
                    Area
                </th>
                <th>
                    Floor
                </th>
                <th>
                    Room
                </th>
                <th>
                    Progress
                </th>
                <th>
                    Note
                </th>
                <th>
                    Assignee
                </th>
                <th class="action">
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.WorkOrders) {
            <tr>
                <td data-cell="name">
                    @Html.DisplayFor(modelItem => item.RequesterFirstName)  @Html.DisplayFor(modelItem => item.RequesterLastName)
                </td>
                <td data-created="@item.CreatedAt">
                    @item.CreatedAt.ToString().Split(' ').FirstOrDefault()
                </td>
                <td data-cell="request">
                    @Html.DisplayFor(modelItem => item.Request)
                </td>
                <td data-cell="building">
                    @Html.DisplayFor(modelItem => item.Building)
                </td>
                <td data-cell="area">
                    @Html.DisplayFor(modelItem => item.Area)
                </td>
                <td data-cell="floor">
                    @Html.DisplayFor(modelItem => item.Floor)
                </td>
                <td data-cell="room">
                    @Html.DisplayFor(modelItem => item.RoomNumber)
                </td>
                <td data-cell="progress">
                        <select asp-for="@item.Progress"
                                class="badge progress-dropdown"
                                asp-items="Html.GetEnumSelectList<ReslifeWorkorderManagement.Models.Progress>()"
                                onchange="updateProgress(this)"
                                data-url="@Url.Action("UpdateProgress", "WorkOrders", new { id = item.Id })"
                                data-id="@item.Id">
                        </select>
                </td>
                <td data-cell="note">
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                        <select asp-for="@item.WorkOrderAssignee"
                                class="badge assignee-box"
                                data-workorder-id="@item.Id"
                                data-url="@Url.Action("UpdateAssignee","WorkOrders", new { Id = @item.Id })"
                                onchange="updateAssignee(this)">
                            @if (string.IsNullOrEmpty(@item.WorkOrderAssigneeId))
                            {
                                <option selected value="">
                                    Select Assignee
                                </option>
                            }
                            @foreach(var assignee in Model.Assignees)
                            {
                                if (@item.WorkOrderAssigneeId == assignee.Value)
                                {
                                    <option selected value="@assignee.Value")>
                                    @assignee.Text
                                    </option>
                                }
                                else
                                {
                                    <option value="@assignee.Value" )>
                                        @assignee.Text
                                    </option>
                                }
                            }
                        </select>

                </td>
                <td data-cell="action">
                    <button data-toggle="modal" data-url="@Url.Action("Edit", "WorkOrders", new { id = item.Id })" class="edit-icon-btn">
                        <i class="bi bi-pencil edit-icon"></i>
                    </button>
                    <button data-toggle="modal" data-url="@Url.Action("Details", "WorkOrders", new { id = item.Id })" class="details-icon-btn">
                            <i class="bi bi-journal-text details-icon"></i>
                    </button>
                    <button data-toggle="modal" data-url="@Url.Action("Delete", "WorkOrders", new { id = item.Id })" class="delete-icon-btn">
                        <i class="bi bi-trash details-icon"></i>
                    </button>
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>

<div class="full-width-container mobile-view">
    @foreach (var item in Model.WorkOrders)
    {
        <div class="card-container">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        <strong>@Html.DisplayFor(modelItem => item.RequesterFirstName) @Html.DisplayFor(modelItem => item.RequesterLastName)</strong>
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.RequesterEmail)
                     </div>
                    <div data-cell="progress">
                        <select asp-for="@item.Progress"
                                class="badge progress-dropdown"
                                asp-items="Html.GetEnumSelectList<ReslifeWorkorderManagement.Models.Progress>()"
                                onchange="updateProgress(this)"
                                data-url="@Url.Action("UpdateProgress", "WorkOrders", new { id = item.Id })"
                                data-id="@item.Id">
                        </select>
                    </div>
                </div>

                <!-- Request Content -->
                <div class="text-secondary mb-2">
                    Request: @Html.DisplayFor(modelItem => item.Request)
                </div>

                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        Building: <span data-cell="building">@Html.DisplayFor(modelItem => item.Building)</span>
                     </div>
                    @if (item.Floor != 0)
                    {
                        <div>
                            Floor: @item.Floor
                        </div>
                    }
                    <div>
                        Area: <span data-cell="area">@Html.DisplayFor(modelItem => item.Area)</span>
                    </div>
                </div>
                <!-- Assignee -->
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                    Assignee:
                    <select asp-for="@item.WorkOrderAssignee"
                                class="badge assignee-box"
                                data-workorder-id="@item.Id"
                                data-url="@Url.Action("UpdateAssignee","WorkOrders", new { Id = @item.Id })"
                                onchange="updateAssignee(this)">
                            @if (string.IsNullOrEmpty(@item.WorkOrderAssigneeId))
                            {
                                <option selected value="">
                                    Select Assignee
                                </option>
                            }
                            @foreach(var assignee in Model.Assignees)
                            {
                                if (@item.WorkOrderAssigneeId == assignee.Value)
                                {
                                    <option selected value="@assignee.Value")>
                                    @assignee.Text
                                    </option>
                                }
                                else
                                {
                                    <option value="@assignee.Value" )>
                                        @assignee.Text
                                    </option>
                                }
                            }
                    </select>
                    </div>
                    <div data-created="@item.CreatedAt">                                         
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </div>
                </div>
        </div>
    }
</div>

<style>

    #filterPanel {
        position: absolute;
        right: 0;
        width: 100%; 
        z-index: 1000; 
        background-color: rgba(242, 245, 247, 0.9);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .edit-icon-btn {
        border-radius: 10%;
        margin: 2px;
        padding: 0.3rem 0.3rem;
        border: none;
        box-shadow: none;
        color: white;
        background-color: #303030;
    }

    .details-icon-btn{
        border-radius: 10%;
        margin: 2px;
        padding: 0.3rem 0.3rem;
        border: none;
        color: white;
        background-color: #303030;
    }

    .delete-icon-btn{
        border-radius: 10%;
        margin: 2px;
        padding: 0.3rem 0.3rem;
        border: none;
        color: white;
        background-color: #303030;
    }

    .progress-dropdown{
        padding: 0.5rem 0.75rem;
        border-radius: 10px;
        text-decoration: none;
        outline: none;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border: none;
        appearance: none;
    }
    .progress-dropdown.progress-requested {
        background-color: rgba(180, 16, 49, 0.33);
        color: rgb(112, 0, 23);
    }

    .progress-dropdown.progress-inprogress {
        background-color: rgba(255, 187, 17, 0.33);
        color: rgba(161, 115, 0);
    }

    .progress-dropdown.progress-complete {
        background-color: rgba(95, 207, 98, 0.51);
        color: rgba(40, 84, 42);
    }

    .assignee-box{
        padding: 0.5rem 0.75rem;
        border-radius: 10px;
        text-decoration: none;
        outline: none;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border: none;
        appearance: none;
        background-color: rgba(116, 116, 116, 0.86);
    }

    table{
        background-color: #f7f7f7;
        color: black;
    }

    th,
    td {
        padding: 1rem;
    }

    .action {
        width: 12%;
    }

    thead{
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        position: sticky;
    }
    th{
        position: sticky;
        text-align: left;
    }

    tr:nth-of-type(2n) {
        background: hsl(0 50% 0% / 0.05);
    }


    /* Mobile View */

    .mobile-view{
        display: none;
    }

    @@media (max-width: 768px) {
        table {
            display: none;
        }

        .mobile-view{
            display: grid;
            font-size: 18px;
        }
    }

    .full-width-container {
        width: 100%;
        padding: 0;
        margin: 0;
        box-sizing: border-box;
    }

    .card-container {
        width: 100%;
        padding: 30px 30px;
        margin-bottom: 20px; 
        box-sizing: border-box;
        background-color: #f7f7f7;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 5%;
    }
</style>
